import webbrowser
from colorama import Fore, init, Style
from ..core.data_manager import DataManager
from ..games.farm import Farm
from ..utils.weather import Weather
from ..utils.cipher import Cipher
from ..network.chat import Chat
from ..games.life_gamification import LifeGamification

# Initialize colorama
init()

class LifeAssistant:
    def __init__(self):
        self.data_manager = DataManager()
        self.farm = Farm(self.data_manager)
        self.weather = Weather()
        self.cipher = Cipher()
        self.chat = Chat()
        self.life_gamification = LifeGamification(self.data_manager)
        self.name = "–ì–æ—Å—Ç—å"
        user_data = self.data_manager.get_user_data()
        if "name" in user_data:
            self.name = user_data["name"]

    def run(self):
        print("\n=== üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ===")
        
        if self.name == "–ì–æ—Å—Ç—å":
            print("\n–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
            new_name = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è: ").strip()
            if new_name:
                self.set_name(new_name)
                print(f"\n–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {self.name}! üòä")
            else:
                print("\n–ë—É–¥—É –∑–≤–∞—Ç—å –≤–∞—Å –ì–æ—Å—Ç—å! üòä")
        
        self.show_menu()

    def show_menu(self):
        while True:
            print("\n=== üéØ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===")
            print(f"–ü—Ä–∏–≤–µ—Ç, {self.name}! üëã –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
            print("1. üåæ –§–µ—Ä–º–∞")
            print("2. üå§Ô∏è –ü–æ–≥–æ–¥–∞")
            print("3. üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª")
            print("4. ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
            print("5. üîó GitHub")
            print("6. üîê –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ")
            print("7. üí¨ –õ–æ–∫–∞–ª—å–Ω–∞—è –±–µ—Å–µ–¥–∞")
            print("8. üéÆ –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è –∂–∏–∑–Ω–∏")
            print("9. ‚ùå –í—ã—Ö–æ–¥")
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-9): ")
            
            if choice == "1":
                self.farm_game()
            elif choice == "2":
                self.show_weather()
            elif choice == "3":
                self.show_basketball_guide()
            elif choice == "4":
                self.show_settings()
            elif choice == "5":
                self.open_github()
            elif choice == "6":
                self.cipher_menu()
            elif choice == "7":
                self.chat_menu()
            elif choice == "8":
                self.life_gamification_menu()
            elif choice == "9":
                print("\n–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

    def show_settings(self):
        while True:
            print("\n=== ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===")
            print("1. ‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            print("2. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç: ")
            
            if choice == "1":
                new_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
                if new_name:
                    self.set_name(new_name)
                    print(f"‚úÖ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {new_name}")
                else:
                    print("‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
            elif choice == "2":
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

    def farm_game(self):
        while True:
            self.farm.grow_crops()
            print("\n=== üåæ –§–µ—Ä–º–∞ ===")
            print(f"üí∞ –î–µ–Ω—å–≥–∏: {self.farm.money} –º–æ–Ω–µ—Ç")
            print(f"üìä –£—Ä–æ–≤–µ–Ω—å: {self.farm.level}")
            print(f"‚≠ê –û–ø—ã—Ç: {self.farm.experience}/{self.farm.level * 100}")
            print(f"üå§Ô∏è –ü–æ–≥–æ–¥–∞: {self.farm.weather_effects[self.farm.weather]['emoji']} {self.farm.weather}")
            print(f"üåç –°–µ–∑–æ–Ω: {self.farm.seasons[self.farm.season]['emoji']} {self.farm.season}")
            print("\n1. üëÄ –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–µ")
            print("2. üå± –ü–æ—Å–∞–¥–∏—Ç—å –∫—É–ª—å—Ç—É—Ä—É")
            print("3. üåø –°–æ–±—Ä–∞—Ç—å —É—Ä–æ–∂–∞–π")
            print("4. üéí –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
            print("5. üõí –ö—É–ø–∏—Ç—å —Å–µ–º–µ–Ω–∞")
            print("6. üí∞ –ü—Ä–æ–¥–∞—Ç—å —É—Ä–æ–∂–∞–π")
            print("7. ‚öíÔ∏è –£–ª—É—á—à–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
            print("8. üå§Ô∏è –°–º–µ–Ω–∏—Ç—å —Å–µ–∑–æ–Ω")
            print("9. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
            
            try:
                choice = int(input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-9): "))
                if choice == 1:
                    self.farm.show_field()
                elif choice == 2:
                    self.farm.plant_crop()
                elif choice == 3:
                    self.farm.harvest_crop()
                elif choice == 4:
                    self.farm.show_inventory()
                elif choice == 5:
                    self.farm.buy_seeds()
                elif choice == 6:
                    self.farm.sell_crops()
                elif choice == 7:
                    self.farm.upgrade_tools()
                elif choice == 8:
                    self.farm.change_season()
                elif choice == 9:
                    break
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9")

    def show_weather(self):
        city = input("–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥: ")
        weather_info = self.weather.get_weather(city)
        print(f"\nüå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {city}: {weather_info}")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def show_basketball_guide(self):
        while True:
            print("\n=== üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–π –≥–∏–¥ ===")
            print("1. üìö –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞")
            print("2. üéØ –¢–µ—Ö–Ω–∏–∫–∞ –±—Ä–æ—Å–∫–∞")
            print("3. üèÉ –î—Ä–∏–±–ª–∏–Ω–≥ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è")
            print("4. üõ°Ô∏è –ó–∞—â–∏—Ç–∞")
            print("5. üèÜ –¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ö–µ–º—ã")
            print("6. üí™ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
            print("7. üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑")
            print("8. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
            
            try:
                choice = int(input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª (1-8): "))
                
                if choice == 1:
                    print("\n=== üìö –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ ===")
                    print("‚Ä¢ –ò–≥—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 4 —á–µ—Ç–≤–µ—Ä—Ç–µ–π –ø–æ 10 –º–∏–Ω—É—Ç")
                    print("‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–∞–µ—Ç 2 –æ—á–∫–∞ –∑–∞ –±—Ä–æ—Å–æ–∫ —Å –∏–≥—Ä—ã")
                    print("‚Ä¢ 3 –æ—á–∫–∞ –∑–∞ –±—Ä–æ—Å–æ–∫ –∏–∑-–∑–∞ —Ç—Ä–µ—Ö–æ—á–∫–æ–≤–æ–π –ª–∏–Ω–∏–∏")
                    print("‚Ä¢ 1 –æ—á–∫–æ –∑–∞ —à—Ç—Ä–∞—Ñ–Ω–æ–π –±—Ä–æ—Å–æ–∫")
                    print("‚Ä¢ 24 —Å–µ–∫—É–Ω–¥—ã –Ω–∞ –∞—Ç–∞–∫—É")
                    print("‚Ä¢ 5 —Ñ–æ–ª–æ–≤ - —É–¥–∞–ª–µ–Ω–∏–µ —Å –ø–ª–æ—â–∞–¥–∫–∏")
                    print("‚Ä¢ 4 —á–µ—Ç–≤–µ—Ä—Ç–∏ –ø–æ 10 –º–∏–Ω—É—Ç")
                    print("‚Ä¢ –ü–µ—Ä–µ—Ä—ã–≤ –º–µ–∂–¥—É —á–µ—Ç–≤–µ—Ä—Ç—è–º–∏ - 2 –º–∏–Ω—É—Ç—ã")
                    print("‚Ä¢ –ë–æ–ª—å—à–æ–π –ø–µ—Ä–µ—Ä—ã–≤ - 15 –º–∏–Ω—É—Ç")
                    
                elif choice == 2:
                    print("\n=== üéØ –¢–µ—Ö–Ω–∏–∫–∞ –±—Ä–æ—Å–∫–∞ ===")
                    print("1. –°—Ç–æ–π–∫–∞:")
                    print("   ‚Ä¢ –ù–æ–≥–∏ –Ω–∞ —à–∏—Ä–∏–Ω–µ –ø–ª–µ—á")
                    print("   ‚Ä¢ –ö–æ–ª–µ–Ω–∏ —Å–ª–µ–≥–∫–∞ —Å–æ–≥–Ω—É—Ç—ã")
                    print("   ‚Ä¢ –í–µ—Å –Ω–∞ –ø–æ–¥—É—à–µ—á–∫–∞—Ö —Å—Ç–æ–ø")
                    print("\n2. –î–µ—Ä–∂–∞–Ω–∏–µ –º—è—á–∞:")
                    print("   ‚Ä¢ –†—É–∫–∏ –æ–±—Ä–∞–∑—É—é—Ç –±—É–∫–≤—É '–¢'")
                    print("   ‚Ä¢ –£–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞–ª–µ—Ü –Ω–∞ —Ü–µ–Ω—Ç—Ä–µ –º—è—á–∞")
                    print("   ‚Ä¢ –õ–æ–∫–æ—Ç—å –ø–æ–¥ –º—è—á–æ–º")
                    print("\n3. –ú–µ—Ö–∞–Ω–∏–∫–∞ –±—Ä–æ—Å–∫–∞:")
                    print("   ‚Ä¢ –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö")
                    print("   ‚Ä¢ –í—ã–ø—Ä—è–º–ª–µ–Ω–∏–µ —Ä—É–∫ –≤ –ª–æ–∫—Ç—è—Ö")
                    print("   ‚Ä¢ –ó–∞–≤–µ—Ä—à–∞—é—â–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫–∏—Å—Ç—å—é")
                    print("\n4. –¢–æ—á–∫–∞ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è:")
                    print("   ‚Ä¢ –ü–µ—Ä–µ–¥–Ω–∏–π –∫—Ä–∞–π –∫–æ–ª—å—Ü–∞")
                    print("   ‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–µ–π")
                    
                elif choice == 3:
                    print("\n=== üèÉ –î—Ä–∏–±–ª–∏–Ω–≥ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è ===")
                    print("1. –û—Å–Ω–æ–≤—ã –¥—Ä–∏–±–ª–∏–Ω–≥–∞:")
                    print("   ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –º—è—á–∞ –∫–æ–Ω—á–∏–∫–∞–º–∏ –ø–∞–ª—å—Ü–µ–≤")
                    print("   ‚Ä¢ –ú—è—á –Ω–µ –≤—ã—à–µ –ø–æ—è—Å–∞")
                    print("   ‚Ä¢ –ó–∞—â–∏—Ç–∞ –º—è—á–∞ —Ç–µ–ª–æ–º")
                    print("\n2. –í–∏–¥—ã –¥—Ä–∏–±–ª–∏–Ω–≥–∞:")
                    print("   ‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π")
                    print("   ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–π")
                    print("   ‚Ä¢ –ó–∞—â–∏—Ç–Ω—ã–π")
                    print("\n3. –§–∏–Ω—Ç—ã –∏ –æ–±–≤–æ–¥–∫–∞:")
                    print("   ‚Ä¢ –ö—Ä–æ—Å—Å–æ–≤–µ—Ä")
                    print("   ‚Ä¢ –ó–∞ —Å–ø–∏–Ω–æ–π")
                    print("   ‚Ä¢ –ú–µ–∂–¥—É –Ω–æ–≥")
                    print("   ‚Ä¢ –†–∞–∑–≤–æ—Ä–æ—Ç")
                    
                elif choice == 4:
                    print("\n=== üõ°Ô∏è –ó–∞—â–∏—Ç–∞ ===")
                    print("1. –ó–∞—â–∏—Ç–Ω–∞—è —Å—Ç–æ–π–∫–∞:")
                    print("   ‚Ä¢ –ù–æ–≥–∏ —à–∏—Ä–µ –ø–ª–µ—á")
                    print("   ‚Ä¢ –†—É–∫–∏ –≤ —Å—Ç–æ—Ä–æ–Ω—ã")
                    print("   ‚Ä¢ –¶–µ–Ω—Ç—Ä —Ç—è–∂–µ—Å—Ç–∏ –Ω–∏–∑–∫–æ")
                    print("\n2. –ü—Ä–∏–Ω—Ü–∏–ø—ã –∑–∞—â–∏—Ç—ã:")
                    print("   ‚Ä¢ –í—Å–µ–≥–¥–∞ –º–µ–∂–¥—É –º—è—á–æ–º –∏ –∫–æ–ª—å—Ü–æ–º")
                    print("   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä—É–∫–∏")
                    print("   ‚Ä¢ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Å–∫–æ–ª—å–∂–µ–Ω–∏–µ–º")
                    print("\n3. –í–∏–¥—ã –∑–∞—â–∏—Ç—ã:")
                    print("   ‚Ä¢ –õ–∏—á–Ω–∞—è")
                    print("   ‚Ä¢ –ó–æ–Ω–Ω–∞—è")
                    print("   ‚Ä¢ –ü—Ä–µ—Å—Å–∏–Ω–≥")
                    
                elif choice == 5:
                    print("\n=== üèÜ –¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ö–µ–º—ã ===")
                    print("1. –ê—Ç–∞–∫—É—é—â–∏–µ —Å—Ö–µ–º—ã:")
                    print("   ‚Ä¢ –ü–æ–∑–∏—Ü–∏–æ–Ω–Ω–∞—è –∞—Ç–∞–∫–∞")
                    print("   ‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Ä—ã–≤")
                    print("   ‚Ä¢ –ó–∞—Å–ª–æ–Ω –∏ –æ—Ç—Ä—ã–≤")
                    print("\n2. –ó–∞—â–∏—Ç–Ω—ã–µ —Å—Ö–µ–º—ã:")
                    print("   ‚Ä¢ 2-3 –∑–æ–Ω–∞")
                    print("   ‚Ä¢ 3-2 –∑–æ–Ω–∞")
                    print("   ‚Ä¢ 1-3-1 –∑–æ–Ω–∞")
                    print("\n3. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏:")
                    print("   ‚Ä¢ –í–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ")
                    print("   ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –±—Ä–æ—Å–æ–∫")
                    
                elif choice == 6:
                    print("\n=== üí™ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ ===")
                    print("1. –§–∏–∑–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞:")
                    print("   ‚Ä¢ –ë–µ–≥–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è")
                    print("   ‚Ä¢ –ü—Ä—ã–∂–∫–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è")
                    print("   ‚Ä¢ –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
                    print("\n2. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã:")
                    print("   ‚Ä¢ –ë—Ä–æ—Å–∫–∏ —Å —Ä–∞–∑–Ω—ã—Ö –¥–∏—Å—Ç–∞–Ω—Ü–∏–π")
                    print("   ‚Ä¢ –î—Ä–∏–±–ª–∏–Ω–≥ —Å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è–º–∏")
                    print("   ‚Ä¢ –ü–µ—Ä–µ–¥–∞—á–∏ –≤ –¥–≤–∏–∂–µ–Ω–∏–∏")
                    print("\n3. –¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:")
                    print("   ‚Ä¢ 2x2, 3x3")
                    print("   ‚Ä¢ –ò–≥—Ä–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏")
                    print("   ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –≤—Ä–µ–º–µ–Ω–∏")
                    
                elif choice == 7:
                    print("\n=== üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ ===")
                    print("1. –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:")
                    print("   ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–Ω–∏–π")
                    print("   ‚Ä¢ –ü–æ–¥–±–æ—Ä—ã")
                    print("   ‚Ä¢ –ü–µ—Ä–µ–¥–∞—á–∏")
                    print("   ‚Ä¢ –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã")
                    print("\n2. –ê–Ω–∞–ª–∏–∑ –∏–≥—Ä—ã:")
                    print("   ‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏")
                    print("   ‚Ä¢ –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∑–∞—â–∏—Ç—ã")
                    print("   ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å —Ç–µ–º–ø–∞")
                    print("\n3. –ü—Ä–æ–≥—Ä–µ—Å—Å:")
                    print("   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π")
                    print("   ‚Ä¢ –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–π")
                    print("   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫")
                    
                elif choice == 8:
                    break
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 8")
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def open_github(self):
        webbrowser.open('https://github.com/unharne')
        print("\n–û—Ç–∫—Ä—ã–≤–∞—é GitHub –ø—Ä–æ—Ñ–∏–ª—å...")
        self.show_menu()

    def set_name(self, new_name: str):
        user_data = self.data_manager.get_user_data()
        user_data["name"] = new_name
        self.data_manager.update_user_data(user_data)
        self.name = new_name

    def cipher_menu(self):
        while True:
            print("\n=== üîê –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ ===")
            print("1. üîë –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á")
            print("2. üìù –í–≤–µ—Å—Ç–∏ —Å–≤–æ–π –∫–ª—é—á")
            print("3. üîí –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç")
            print("4. üîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç")
            print("5. ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—é—á–µ")
            print("6. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-6): ")
            
            try:
                if choice == "1":
                    key = self.cipher.generate_key()
                    print(f"\n–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á: {key}")
                    print("\n–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–ª—é—á! –û–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏.")
                    print("\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—é—á–µ:")
                    print(self.cipher.get_key_info())
                
                elif choice == "2":
                    print("\n–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á. –û–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –Ω–∞–±–æ—Ä–∞:")
                    print("‚Ä¢ –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã (a-z, A-Z)")
                    print("‚Ä¢ –†—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã (–∞-—è, –ê-–Ø)")
                    print("‚Ä¢ –¶–∏—Ñ—Ä—ã (0-9)")
                    print("‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (!@#$%^&*()_+-=[]{}|;:,.<>?/~`)")
                    print(f"–í—Å–µ–≥–æ {len(self.cipher.characters)} —Å–∏–º–≤–æ–ª–æ–≤ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π")
                    key = input("\n–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á: ").strip()
                    self.cipher.set_key(key)
                    print("‚úÖ –ö–ª—é—á —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    print("\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—é—á–µ:")
                    print(self.cipher.get_key_info())
                
                elif choice == "3":
                    if not self.cipher.key:
                        print("‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–ª—é—á")
                        continue
                    print("\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è.")
                    print("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ä—É—Å—Å–∫–∏–µ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.")
                    text = input("\n–¢–µ–∫—Å—Ç: ")
                    encrypted = self.cipher.encrypt(text)
                    print(f"\n–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {encrypted}")
                
                elif choice == "4":
                    if not self.cipher.key:
                        print("‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–ª—é—á")
                        continue
                    print("\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏.")
                    print("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ä—É—Å—Å–∫–∏–µ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.")
                    text = input("\n–¢–µ–∫—Å—Ç: ")
                    decrypted = self.cipher.decrypt(text)
                    print(f"\n–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {decrypted}")
                
                elif choice == "5":
                    print("\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∫–ª—é—á–µ:")
                    print(self.cipher.get_key_info())
                
                elif choice == "6":
                    break
                
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            
            except ValueError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            except Exception as e:
                print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
            
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def chat_menu(self):
        print(Fore.CYAN + "\nüî∏üî∏üî∏ –õ–æ–∫–∞–ª—å–Ω–∞—è –ë–µ—Å–µ–¥–∞ üî∏üî∏üî∏")
        print("1Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä üöÄ")
        print("2Ô∏è‚É£  –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç üí¨")
        choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ").strip()

        if choice == "1":
            self.chat.start_server()
        elif choice == "2":
            self.chat.start_client()
        else:
            print(Fore.RED + "üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2.")

    def life_gamification_menu(self):
        while True:
            print(f"\n{Fore.CYAN}=== üéÆ –ñ–∏–∑–Ω–µ–Ω–Ω–∞—è –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è ==={Style.RESET_ALL}")
            print(f"{Fore.CYAN}üë§ –£—Ä–æ–≤–µ–Ω—å: {self.life_gamification.level} ‚≠ê")
            print(f"‚≠ê –û–ø—ã—Ç: {int(self.life_gamification.experience)}/{int(self.life_gamification.experience_to_next_level)}")
            print(f"‚ö° –≠–Ω–µ—Ä–≥–∏—è: {self.life_gamification.energy}/100{Style.RESET_ALL}")
            
            print(f"\n{Fore.CYAN}–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:{Style.RESET_ALL}")
            print("1. üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É")
            print("2. ‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞—á—É")
            print("3. üìú –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è")
            print("4. üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            print("0. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            
            choice = input(f"\n{Fore.CYAN}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-4): {Style.RESET_ALL}")
            
            if choice == "0":
                break
            elif choice == "1":
                self.life_gamification.add_task()
            elif choice == "2":
                self.life_gamification.complete_task()
            elif choice == "3":
                self.life_gamification.show_daily_quests()
                if self.life_gamification.daily_quests:
                    quest_choice = input(f"\n{Fore.CYAN}–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (1-3) –∏–ª–∏ 0 –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞: {Style.RESET_ALL}")
                    if quest_choice in ["1", "2", "3"]:
                        self.life_gamification.complete_daily_quest(int(quest_choice) - 1)
            elif choice == "4":
                self.life_gamification.show_statistics()
            else:
                print(f"{Fore.RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä{Style.RESET_ALL}") 